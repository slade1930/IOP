# Generated by Django 5.2.2 on 2025-07-07 23:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('metodos', '0005_problemasimplex_explicacion_chatgpt'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiferenciacionFinita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcion', models.CharField(help_text='Función en términos de x, por ejemplo: sin(x)', max_length=255)),
                ('punto', models.FloatField(help_text='Punto en el que se desea derivar')),
                ('h', models.FloatField(default=0.01, help_text='Valor de h para la fórmula de diferencia')),
                ('orden', models.IntegerField(default=1, help_text='Orden de la derivada (1, 2, ...)')),
                ('tipo', models.CharField(default='central', help_text='Tipo de diferencia: adelante, atrás o central', max_length=20)),
                ('resultado', models.JSONField(blank=True, null=True)),
                ('grafico_base64', models.TextField(blank=True, null=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cálculo Diferenciación Finita',
                'verbose_name_plural': 'Cálculos Diferenciación Finita',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='FalsaPosicion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funcion', models.CharField(help_text='Ingresa la función en términos de x, por ejemplo: x**3 - x - 2', max_length=255)),
                ('x0', models.FloatField(help_text='Extremo izquierdo del intervalo')),
                ('x1', models.FloatField(help_text='Extremo derecho del intervalo')),
                ('tolerancia', models.FloatField(default=0.0001, help_text='Tolerancia del método')),
                ('max_iteraciones', models.IntegerField(default=100, help_text='Número máximo de iteraciones')),
                ('grafico_base64', models.TextField(blank=True, null=True)),
                ('resultado', models.TextField(blank=True, null=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cálculo Falsa Posición',
                'verbose_name_plural': 'Cálculos Falsa Posición',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='GaussEliminacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matriz_a', models.TextField(help_text='Matriz A como lista de listas')),
                ('vector_b', models.TextField(help_text='Vector b como lista')),
                ('resultado', models.TextField(blank=True, null=True)),
                ('grafico_base64', models.TextField(blank=True, null=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cálculo Gauss',
                'verbose_name_plural': 'Cálculos Gauss',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='GaussJordan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matriz_a', models.TextField(help_text='Matriz A como lista de listas')),
                ('vector_b', models.TextField(help_text='Vector b como lista')),
                ('problema', models.TextField(help_text='Descripción del problema económico')),
                ('resultado', models.TextField(blank=True, null=True)),
                ('pasos_detallados', models.TextField(blank=True, null=True)),
                ('grafico_base64', models.TextField(blank=True, null=True)),
                ('matriz_transformada', models.TextField(blank=True, null=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterpolacionNewton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_vals', models.JSONField(help_text='Lista de valores x, ej: [1, 2, 3]')),
                ('y_vals', models.JSONField(help_text='Lista de valores y, ej: [2, 4, 6]')),
                ('x_interpolar', models.FloatField(help_text='Punto donde se desea interpolar')),
                ('resultado', models.JSONField(blank=True, null=True)),
                ('polinomio', models.TextField(blank=True, null=True)),
                ('grafico_base64', models.TextField(blank=True, null=True)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cálculo Interpolación Newton',
                'verbose_name_plural': 'Cálculos Interpolación Newton',
                'ordering': ['-creado'],
            },
        ),
    ]
